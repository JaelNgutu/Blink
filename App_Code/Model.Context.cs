//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;

public partial class DatabaseEntities : DbContext
{
    public DatabaseEntities()
        : base("name=DatabaseEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public DbSet<Category> Categories { get; set; }
    public DbSet<Comment> Comments { get; set; }
    public DbSet<Country> Countries { get; set; }
    public DbSet<Product> Products { get; set; }
    public DbSet<Userdata> Userdatas { get; set; }
    public DbSet<Report> Reports { get; set; }
    public DbSet<Like> Likes1 { get; set; }
    public DbSet<Find> Finds { get; set; }

    public virtual ObjectResult<Login_Check_Sp_Result> Login_Check_Sp(string email, string usn)
    {
        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        var usnParameter = usn != null ?
            new ObjectParameter("usn", usn) :
            new ObjectParameter("usn", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Check_Sp_Result>("Login_Check_Sp", emailParameter, usnParameter);
    }

    public virtual int SP_AddNewCategory(string categoryName)
    {
        var categoryNameParameter = categoryName != null ?
            new ObjectParameter("CategoryName", categoryName) :
            new ObjectParameter("CategoryName", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddNewCategory", categoryNameParameter);
    }

    public virtual int SP_AddNewProduct(string productName, Nullable<int> productPrice, string productImage, string productDescription, Nullable<int> categoryID, Nullable<int> userID, Nullable<int> countryID)
    {
        var productNameParameter = productName != null ?
            new ObjectParameter("ProductName", productName) :
            new ObjectParameter("ProductName", typeof(string));

        var productPriceParameter = productPrice.HasValue ?
            new ObjectParameter("ProductPrice", productPrice) :
            new ObjectParameter("ProductPrice", typeof(int));

        var productImageParameter = productImage != null ?
            new ObjectParameter("ProductImage", productImage) :
            new ObjectParameter("ProductImage", typeof(string));

        var productDescriptionParameter = productDescription != null ?
            new ObjectParameter("ProductDescription", productDescription) :
            new ObjectParameter("ProductDescription", typeof(string));

        var categoryIDParameter = categoryID.HasValue ?
            new ObjectParameter("CategoryID", categoryID) :
            new ObjectParameter("CategoryID", typeof(int));

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));

        var countryIDParameter = countryID.HasValue ?
            new ObjectParameter("CountryID", countryID) :
            new ObjectParameter("CountryID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddNewProduct", productNameParameter, productPriceParameter, productImageParameter, productDescriptionParameter, categoryIDParameter, userIDParameter, countryIDParameter);
    }

    public virtual ObjectResult<SP_GetAllCategories_Result> SP_GetAllCategories()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllCategories_Result>("SP_GetAllCategories");
    }

    public virtual ObjectResult<SP_GetAllCountries_Result> SP_GetAllCountries()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllCountries_Result>("SP_GetAllCountries");
    }

    public virtual int EmailAvailability(string email, ObjectParameter emailCount)
    {
        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmailAvailability", emailParameter, emailCount);
    }

    public virtual int SP_AddNewComment(string comment, Nullable<int> productID, Nullable<int> userID, string link)
    {
        var commentParameter = comment != null ?
            new ObjectParameter("Comment", comment) :
            new ObjectParameter("Comment", typeof(string));

        var productIDParameter = productID.HasValue ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(int));

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));

        var linkParameter = link != null ?
            new ObjectParameter("link", link) :
            new ObjectParameter("link", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddNewComment", commentParameter, productIDParameter, userIDParameter, linkParameter);
    }

    public virtual int SP_delete(string productID)
    {
        var productIDParameter = productID != null ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_delete", productIDParameter);
    }

    public virtual ObjectResult<SP_DeleteComment_Result> SP_DeleteComment(string cid)
    {
        var cidParameter = cid != null ?
            new ObjectParameter("Cid", cid) :
            new ObjectParameter("Cid", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DeleteComment_Result>("SP_DeleteComment", cidParameter);
    }

    public virtual ObjectResult<SP_userCheck_Result> SP_userCheck(string uid, string pid)
    {
        var uidParameter = uid != null ?
            new ObjectParameter("Uid", uid) :
            new ObjectParameter("Uid", typeof(string));

        var pidParameter = pid != null ?
            new ObjectParameter("Pid", pid) :
            new ObjectParameter("Pid", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_userCheck_Result>("SP_userCheck", uidParameter, pidParameter);
    }

    public virtual ObjectResult<SP_UserPosts_Result> SP_UserPosts(string user)
    {
        var userParameter = user != null ?
            new ObjectParameter("user", user) :
            new ObjectParameter("user", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UserPosts_Result>("SP_UserPosts", userParameter);
    }

    public virtual ObjectResult<spSearch_Result> spSearch(string searchTerm)
    {
        var searchTermParameter = searchTerm != null ?
            new ObjectParameter("SearchTerm", searchTerm) :
            new ObjectParameter("SearchTerm", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearch_Result>("spSearch", searchTermParameter);
    }

    public virtual int UserNameAvailability(string userName, ObjectParameter userNameCount)
    {
        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserNameAvailability", userNameParameter, userNameCount);
    }

    public virtual int Procedure(Nullable<int> productID)
    {
        var productIDParameter = productID.HasValue ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure", productIDParameter);
    }

    public virtual int SP_AddLike(string userID, string productID)
    {
        var userIDParameter = userID != null ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(string));

        var productIDParameter = productID != null ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddLike", userIDParameter, productIDParameter);
    }

    public virtual int SP_AddNewReport(Nullable<int> productID)
    {
        var productIDParameter = productID.HasValue ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddNewReport", productIDParameter);
    }

    public virtual int SP_IgnoreReport(string productID)
    {
        var productIDParameter = productID != null ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IgnoreReport", productIDParameter);
    }

    public virtual ObjectResult<SP_LikeCheck_Result> SP_LikeCheck(string uid, string pid)
    {
        var uidParameter = uid != null ?
            new ObjectParameter("Uid", uid) :
            new ObjectParameter("Uid", typeof(string));

        var pidParameter = pid != null ?
            new ObjectParameter("Pid", pid) :
            new ObjectParameter("Pid", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LikeCheck_Result>("SP_LikeCheck", uidParameter, pidParameter);
    }

    public virtual int SP_RemoveLike(string userID, string productID)
    {
        var userIDParameter = userID != null ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(string));

        var productIDParameter = productID != null ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RemoveLike", userIDParameter, productIDParameter);
    }

    public virtual ObjectResult<User_Check_Sp_Result> User_Check_Sp(string email)
    {
        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User_Check_Sp_Result>("User_Check_Sp", emailParameter);
    }

    public virtual int SP_UserWL(string user)
    {
        var userParameter = user != null ?
            new ObjectParameter("user", user) :
            new ObjectParameter("user", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserWL", userParameter);
    }

    public virtual int SP_AddNewFind(string itemName, Nullable<int> itemPrice, string itemImage, string itemDescription, Nullable<int> categoryID, Nullable<int> productID, string link, string date)
    {
        var itemNameParameter = itemName != null ?
            new ObjectParameter("ItemName", itemName) :
            new ObjectParameter("ItemName", typeof(string));

        var itemPriceParameter = itemPrice.HasValue ?
            new ObjectParameter("ItemPrice", itemPrice) :
            new ObjectParameter("ItemPrice", typeof(int));

        var itemImageParameter = itemImage != null ?
            new ObjectParameter("ItemImage", itemImage) :
            new ObjectParameter("ItemImage", typeof(string));

        var itemDescriptionParameter = itemDescription != null ?
            new ObjectParameter("ItemDescription", itemDescription) :
            new ObjectParameter("ItemDescription", typeof(string));

        var categoryIDParameter = categoryID.HasValue ?
            new ObjectParameter("CategoryID", categoryID) :
            new ObjectParameter("CategoryID", typeof(int));

        var productIDParameter = productID.HasValue ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(int));

        var linkParameter = link != null ?
            new ObjectParameter("Link", link) :
            new ObjectParameter("Link", typeof(string));

        var dateParameter = date != null ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddNewFind", itemNameParameter, itemPriceParameter, itemImageParameter, itemDescriptionParameter, categoryIDParameter, productIDParameter, linkParameter, dateParameter);
    }
}
